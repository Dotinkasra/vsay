name: Build and Release 

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build: # ジョブ名をbuildに変更
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64 # Windows ARM64は一般的ではないため除外

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Install build dependencies (Linux only)
        if: matrix.goos == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y binutils-gold g++ gcc libasound2-dev

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 1 # CGOを有効にする
        run: |
          OUTPUT_NAME="vsay-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            OUTPUT_NAME="${OUTPUT_NAME}.exe"
          fi
          go build -v -o "${OUTPUT_NAME}" ./cmd/vsay/main.go

      - name: Archive build artifact
        run: |
          OUTPUT_NAME="vsay-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            OUTPUT_NAME="${OUTPUT_NAME}.exe"
          fi
          tar -czf "${OUTPUT_NAME}.tar.gz" "${OUTPUT_NAME}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.goos }}-${{ matrix.goarch }}
          path: vsay-${{ matrix.goos }}-${{ matrix.goarch }}*.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        run: |
          gh release create ${{ github.ref_name }} --generate-notes artifacts/**/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
